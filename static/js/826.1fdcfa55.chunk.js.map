{"version":3,"file":"static/js/826.1fdcfa55.chunk.js","mappings":"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","sources":["components/FormPhonebook/FormPhonebook.styled.js","components/FormPhonebook/FormPhonebook.jsx","components/ListContact/ListContact.styled.js","components/ListContact/ListContact.jsx","components/SeachBar/SeachBar.styled.js","components/SeachBar/SeachBar.jsx","components/page/Contacts/Contacts.js","redux/selector.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 8px;\n  padding: 10px;\n`;\n\nexport const StyledField = styled(Field)`\n  padding: 4px;\n  margin-bottom: 15px;\n`;\n\nexport const Block = styled.div`\n  border: 4px solid purple;\n  width: 500px;\n  margin: 0 auto;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { Block, StyledField, StyledForm } from './FormPhonebook.styled';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { myContacts } from 'redux/selector';\nimport { addContacts } from 'redux/operation';\n\nconst schema = Yup.object().shape({\n  name: Yup.string().min(1, 'Too Short!').required('Required'),\n  number: Yup.string().min(3, 'Too Short!').required('Required'),\n});\n\nexport const FormPhonebook = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(myContacts);\n\n  const handleSubmit = (value, action) => {\n    const searchName = contacts.map(cont => cont.name).includes(value.name);\n\n    if (searchName) {\n      alert(`${value.name} is already in contacts`);\n      action.resetForm();\n    } else {\n      dispatch(addContacts(value));\n      action.resetForm();\n    }\n  };\n\n  return (\n    <Block>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <label>Name</label>\n          <StyledField type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"div\" />\n          <label>Number</label>\n          <StyledField type=\"tel\" name=\"number\" />\n          <ErrorMessage name=\"number\" component=\"div\" />\n\n          <button type=\"submit\">Add contact</button>\n        </StyledForm>\n      </Formik>\n    </Block>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0 auto;\n  width: 480px;\n  padding-top: 15px;\n  padding-bottom: 15px;\n`;\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nexport const Button = styled.button`\n  background-color: red;\n  color: white;\n  padding: 5px 5px;\n  cursor: pointer;\n`;\n\nexport const LookButton = styled.div`\n  text-align: center;\n  padding: 5px 10px;\n  cursor: pointer;\n`;\n","import { Button, List, ListItem } from './ListContact.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { myContacts, myFilters } from 'redux/selector';\nimport { deleteContact } from 'redux/operation';\n\nexport const ListContact = () => {\n  const contacts = useSelector(myContacts);\n  const filters = useSelector(myFilters);\n\n  const dispatch = useDispatch();\n\n  const filtred = contacts.filter(item =>\n    item.name.toLowerCase().includes(filters)\n  );\n\n  return (\n    <List>\n      {filtred.map(item => {\n        return (\n          <ListItem key={item.id}>\n            <p>\n              {item.name}: {item.number}\n            </p>\n            <Button onClick={() => dispatch(deleteContact(item.id))}>\n              Delete\n            </Button>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Block = styled.div`\n  text-align: center;\n  padding: 16px 24px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Block } from './SeachBar.styled';\nimport { myFilters } from 'redux/selector';\nimport { filterList } from 'redux/filterSlice';\n\nexport const SearchBar = () => {\n  const filter = useSelector(myFilters);\n  const dispatch = useDispatch();\n  return (\n    <Block>\n      <p>Find contact by name</p>\n      <label htmlFor=\"search\">\n        <input\n          type=\"text\"\n          name=\"seach\"\n          value={filter}\n          onChange={evt => dispatch(filterList(evt.target.value.trim()))}\n        />\n      </label>\n    </Block>\n  );\n};\n","import { useEffect } from 'react';\n\nimport { fetchContacts } from 'redux/operation';\n\nconst { FormPhonebook } = require('components/FormPhonebook/FormPhonebook');\nconst { ListContact } = require('components/ListContact/ListContact');\nconst { Loader } = require('components/Loader/Loader');\nconst { SearchBar } = require('components/SeachBar/SeachBar');\nconst { useSelector, useDispatch } = require('react-redux');\nconst { myLoading, myError } = require('redux/selector');\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(myLoading);\n  const error = useSelector(myError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <FormPhonebook />\n\n      <SearchBar />\n      {isLoading && !error && <Loader />}\n      <ListContact />\n    </div>\n  );\n};\nexport default Contacts;\n","export const myContacts = state => state.contacts.contacts.items;\nexport const myFilters = state => state.filter.filter;\nexport const myLoading = state => state.contacts.contacts.isLoading;\nexport const myError = state => state.contacts.contacts.error;\n"],"names":["StyledForm","styled","Form","StyledField","Field","Block","schema","Yup","shape","name","min","required","number","FormPhonebook","dispatch","useDispatch","contacts","useSelector","myContacts","initialValues","validationSchema","onSubmit","value","action","map","cont","includes","alert","resetForm","addContacts","type","component","List","ListItem","Button","ListContact","filters","myFilters","filtred","filter","item","toLowerCase","onClick","deleteContact","id","SearchBar","htmlFor","onChange","evt","filterList","target","trim","require","Loader","myLoading","myError","isLoading","error","useEffect","fetchContacts","state","items"],"sourceRoot":""}